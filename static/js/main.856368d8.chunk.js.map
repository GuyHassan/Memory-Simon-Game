{"version":3,"sources":["components/WelcomePage.js","components/Game.js","components/App.js","index.js"],"names":["WelcomePage","useState","userName","setUserName","history","useHistory","action","onSubmit","e","preventDefault","localStorage","setItem","JSON","stringify","push","alert","className","type","value","onChange","target","placeholder","Game","map","val","isOn","circles","setCircles","currentScore","setCurrentScore","bestScore","setBestScore","Math","floor","random","prevBulbs","setPrevBulbs","round","setRound","canPlay","setCanPlay","win","lose","winLose","setWinLose","onClickC","i","length","p","toggleLights","n","rand","setTimeout","useEffect","console","log","parse","getItem","randomColor","toString","substr","style","backgroundColor","onClick","App","path","component","href","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.856368d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './globalStyle.css';\r\n\r\nconst WelcomePage = () => {\r\n    const [userName, setUserName] = useState('')\r\n    const history = useHistory()\r\n\r\n    const onChangeName = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (userName) {\r\n            localStorage.setItem('userName', JSON.stringify({ userName }))\r\n            history.push('/game')\r\n        } else alert('Must Enter Something on the field !!');\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={onSubmit}>\r\n            <div className=\"welcome-page\">\r\n                <h1>Welcome To Memory \"Simon\" Game</h1>\r\n\r\n                <input type=\"text\" value={userName} onChange={onChangeName} placeholder=\"Enter Your Name\" />\r\n                <br />\r\n                <input type=\"submit\" value=\"Start\" />\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default WelcomePage;","import React, { useState, useEffect } from 'react';\r\nimport './globalStyle.css';\r\n\r\n\r\nconst Game = () => {\r\n    const [circles, setCircles] = useState(['A', 'B', 'C', 'D', 'E', 'F'].map(val => ({ val, isOn: false })))\r\n    const [userName, setUserName] = useState('')\r\n    const [currentScore, setCurrentScore] = useState(0)\r\n    const [bestScore, setBestScore] = useState(0)\r\n\r\n    const [prevBulbs, setPrevBulbs] = useState([Math.floor(Math.random() * 5)])\r\n\r\n    const [round, setRound] = useState(1)\r\n\r\n    const [canPlay, setCanPlay] = useState(false)\r\n    const [winLose, setWinLose] = useState({ win: false, lose: false })\r\n\r\n    const createCircles = (arrCircle) => {\r\n        return circles.map(({ val, isOn }, i) => {\r\n            // ${isOn ? 'on' : ''}\r\n            const randomColor = '#' + Math.random().toString(16).substr(2, 6)\r\n            return <div className={`circle`} style={{ backgroundColor: `${isOn ? randomColor : ''}` }} onClick={onClickC(i)} key={val} ></div>\r\n        })\r\n\r\n    }\r\n    const onClickC = i => () => {\r\n        if (!canPlay) return\r\n\r\n        if (prevBulbs[round - 1] === i) {\r\n            if (round === prevBulbs.length) {\r\n                // console.log('user Win');\r\n                setCanPlay(false)\r\n                setWinLose(p => ({ ...p, win: true }))\r\n                setCurrentScore(p => p + 10)\r\n                setPrevBulbs(p => [...p, Math.floor(Math.random() * 6)])\r\n            }\r\n            setRound(p => p + 1)\r\n            return\r\n        } else {\r\n            setWinLose(p => ({ ...p, lose: true }))\r\n            // console.log('you lost')\r\n        }\r\n\r\n    }\r\n\r\n    const toggleLights = (n = 1) => {\r\n        if (!n) {\r\n            setCanPlay(true)\r\n            return\r\n        }\r\n\r\n        const rand = prevBulbs[prevBulbs.length - n]\r\n\r\n        setCircles(p => p.map((val, i) => i === rand ? { ...val, isOn: true } : val))\r\n\r\n        setTimeout(() => {\r\n            setCircles(p => p.map((val, i) => i === rand ? { ...val, isOn: false } : val))\r\n            toggleLights(n - 1)\r\n        }\r\n            , 1000)\r\n    }\r\n\r\n    const onClickPlayAgain = () => {\r\n        setWinLose({ win: false, lose: false })\r\n        setCanPlay(false)\r\n        if (currentScore > bestScore)\r\n            setBestScore(currentScore)\r\n        setCurrentScore(0)\r\n        setPrevBulbs([Math.floor(Math.random() * 6)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(prevBulbs);\r\n        setTimeout(() => {\r\n            setWinLose({ win: false, lose: false })\r\n        }, 1000)\r\n\r\n        toggleLights(round + 1)\r\n        setRound(1)\r\n    }, [prevBulbs])\r\n\r\n\r\n    useEffect(() => {\r\n        const { userName } = JSON.parse(localStorage.getItem('userName'))\r\n\r\n        setUserName(userName)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"content\">\r\n                <h1>Memory \"Simon\" Game</h1>\r\n                <h2>Player: <span>{userName}</span></h2>\r\n                <h2>{`Current Score: ${currentScore}`}</h2>\r\n                <h2>{`Best Score: ${bestScore}`}</h2>\r\n                <p>You need to remember the sequence of lit circles and click on them.</p>\r\n            </div>\r\n\r\n            <div className=\"wrap-circle\">\r\n\r\n                {createCircles()}\r\n                {winLose.win && <h1>Good Job !</h1>}\r\n                {\r\n                    winLose.lose &&\r\n                    <div className=\"play-again\">\r\n                        <h1>You Lost !</h1>\r\n                        <button onClick={onClickPlayAgain}>Play Again</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Game;","import React from 'react';\r\nimport WelcomePage from './WelcomePage';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Game from './Game';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <Switch>\r\n                    <Route path=\"/game\" component={Game} />\r\n                    <Route path=\"/\" component={WelcomePage} />\r\n                </Switch>\r\n                <div className=\"made-by\">\r\n                    <h3>Developed By <a href=\"http://guy-hassan.herokuapp.com/\" target=\"_blank\" rel=\"noreferrer\">Guy Hassan</a></h3>\r\n                </div>\r\n\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}